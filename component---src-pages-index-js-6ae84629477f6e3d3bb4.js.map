{"version":3,"sources":["webpack:///./src/components/timer.js","webpack:///./src/components/countdownComponent.js","webpack:///./src/components/upcomingLaunch.js","webpack:///./src/pages/index.js"],"names":["Timer","props","date","Date","unix","time","getHours","getMinutes","substr","toString","propTypes","PropTypes","number","CountdownComponent","LiftOff","react_default","a","createElement","index_es","renderer","_ref","days","hours","minutes","seconds","completed","Typography","variant","useStyles","makeStyles","shape","position","borderTop","borderBottom","borderLeft","borderRight","backgroundColor","height","width","heading","color","top","left","minWidth","button","margin","link","textDecoration","StyledPaperContainer","withStyles","root","display","flexDirection","marginTop","Paper","StyledBoxContainer","justifyContent","flexWrap","Box","ImageBox","padding","InfoBox","TypographyBody","marginBottom","MissionDetailsContainer","LeftContainer","marginRight","RightContainer","TextDetail","fontWeight","TimerBox","UpcomingLaunch","classes","data","_2152200364","fluid","file","childImageSharp","_data$space_gatsby","space_gatsby","_data$space_gatsby$la","launchNext","rocket","launch_date_unix","mission_name","site_name","launch_site","_data$space_gatsby$la2","_data$space_gatsby$la3","block","second_stage","cores","first_stage","payloads","elevation","className","Button","component","Link","to","timer","map","landing_type","Object","keys","rocket_name","rocket_type","rocketInfo","payload_type","gatsby_image_default","alt","countdownComponent","IndexPage","layout","upcomingLaunch"],"mappings":"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","file":"component---src-pages-index-js-6ae84629477f6e3d3bb4.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Timer = props => {\r\n  let date = new Date(props.unix * 1000)\r\n  let hours = date.getHours()\r\n  let minutes = \"0\" + date.getMinutes()\r\n  let time = hours + \":\" + minutes.substr(-2)\r\n  let formattedTime = props.date ? date.toString().substr(0, 15) : time\r\n\r\n  return formattedTime\r\n}\r\n\r\nexport default Timer\r\n\r\nTimer.propTypes = {\r\n  unix: PropTypes.number,\r\n}\r\n","import Countdown from \"react-countdown-now\"\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\nconst CountdownComponent = props => {\r\n  // const calculateTime = launchTime => {\r\n  //   return Date.now() + (launchTime * 1000 - Date.now())\r\n  // }\r\n\r\n  const LiftOff = () => <h3>Lift off!</h3>\r\n\r\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      return <LiftOff />\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h5\">\r\n          {days}d {hours}h {minutes < 10 ? `0${minutes}` : minutes}m{\" \"}\r\n          {seconds < 10 ? `0${seconds}` : seconds}s\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Countdown date={new Date(props.unix * 1000)} renderer={renderer}>\r\n      <LiftOff />\r\n    </Countdown>\r\n  )\r\n}\r\n\r\nCountdownComponent.propTypes = {\r\n  unix: PropTypes.number,\r\n}\r\n\r\nexport default CountdownComponent\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport { Typography, Paper, Box, Button } from \"@material-ui/core\"\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\"\r\nimport Img from \"gatsby-image\"\r\nimport Timer from \"./timer\"\r\nimport CountdownComponent from \"./countdownComponent\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  shape: {\r\n    position: \"relative\",\r\n    borderTop: \"50px solid rgba(34,39,43,0.8)\",\r\n    borderBottom: \"solid transparent\",\r\n    borderLeft: \"5px transparent\",\r\n    borderRight: \"70px solid transparent\",\r\n    backgroundColor: \"rgb(0,82,136)\",\r\n    height: \"1px\",\r\n    width: \"70%\",\r\n  },\r\n  heading: {\r\n    position: \"absolute\",\r\n    color: \"#FFFFFF\",\r\n    top: \"-42px\",\r\n    left: \"5px\",\r\n    minWidth: \"260px\",\r\n  },\r\n  button: {\r\n    margin: \"15px 0px\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n}))\r\n\r\nconst StyledPaperContainer = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: \"50px\",\r\n    width: \"95%\",\r\n    margin: \"0 auto\",\r\n  },\r\n})(Paper)\r\n\r\nconst StyledBoxContainer = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: \"40px\",\r\n  },\r\n})(Box)\r\n\r\nconst ImageBox = withStyles({\r\n  root: {\r\n    height: \"300px\",\r\n    width: \"300px\",\r\n    padding: \"20px\",\r\n  },\r\n})(Box)\r\n\r\nconst InfoBox = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"5px\",\r\n  },\r\n})(Box)\r\n\r\nconst TypographyBody = withStyles({\r\n  root: {\r\n    marginBottom: \"5px\",\r\n  },\r\n})(Typography)\r\n\r\nconst MissionDetailsContainer = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n})(Box)\r\n\r\nconst LeftContainer = withStyles({\r\n  root: {\r\n    marginRight: \"10px\",\r\n  },\r\n})(Box)\r\n\r\nconst RightContainer = withStyles({\r\n  root: {},\r\n})(Box)\r\n\r\nconst TextDetail = withStyles({\r\n  root: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5px\",\r\n  },\r\n})(Typography)\r\n\r\nconst TimerBox = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"30px\",\r\n  },\r\n})(Box)\r\n\r\nconst UpcomingLaunch = () => {\r\n  const classes = useStyles()\r\n\r\n  const landingSite = () => {\r\n    return cores.map(landing_type => {\r\n      return landing_type[Object.keys(landing_type)] !== null\r\n        ? landing_type[Object.keys(landing_type)]\r\n        : \"No landing\"\r\n    })\r\n  }\r\n\r\n  const rocketInfo = block => {\r\n    if (block === null) {\r\n      return `${rocket.rocket_name} ${rocket.rocket_type}`\r\n    } else {\r\n      return `${rocket.rocket_name} ${rocket.rocket_type} block ${block}`\r\n    }\r\n  }\r\n\r\n  const rocketPayload = () => {\r\n    return payloads.map(payload_type => {\r\n      return payload_type[Object.keys(payload_type)]\r\n    })\r\n  }\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      space_gatsby {\r\n        launchNext {\r\n          launch_date_unix\r\n          mission_name\r\n          rocket {\r\n            second_stage {\r\n              payloads {\r\n                payload_type\r\n              }\r\n              block\r\n            }\r\n            first_stage {\r\n              cores {\r\n                landing_vehicle\r\n              }\r\n            }\r\n            rocket_name\r\n            rocket_type\r\n          }\r\n          launch_site {\r\n            site_name\r\n          }\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"img.png\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const {\r\n    file: {\r\n      childImageSharp: { fluid },\r\n    },\r\n    space_gatsby: {\r\n      launchNext: { rocket, launch_date_unix, mission_name },\r\n      launchNext: {\r\n        launch_site: { site_name },\r\n      },\r\n      launchNext: {\r\n        rocket: {\r\n          second_stage: { block },\r\n          first_stage: { cores },\r\n        },\r\n        rocket: {\r\n          second_stage: { payloads },\r\n        },\r\n      },\r\n    },\r\n  } = data\r\n  return (\r\n    <StyledPaperContainer elevation={10}>\r\n      <StyledBoxContainer>\r\n        <InfoBox>\r\n          <Box className={classes.shape}>\r\n            <Typography className={classes.heading} variant=\"h4\">\r\n              {mission_name}\r\n            </Typography>\r\n          </Box>\r\n          <Button className={classes.button} color=\"primary\" variant=\"outlined\">\r\n            <Typography\r\n              className={classes.link}\r\n              color=\"primary\"\r\n              variant=\"h6\"\r\n              component={Link}\r\n              to=\"/upcomingLaunch/\"\r\n            >\r\n              Mission details\r\n            </Typography>\r\n          </Button>\r\n          <MissionDetailsContainer>\r\n            <LeftContainer>\r\n              <TextDetail>Launch date</TextDetail>\r\n              <TextDetail>Launch time</TextDetail>\r\n              <TextDetail>Launch site</TextDetail>\r\n              <TextDetail>Landing site</TextDetail>\r\n              <TextDetail>Rocket type</TextDetail>\r\n              <TextDetail>Payload</TextDetail>\r\n            </LeftContainer>\r\n            <RightContainer>\r\n              <TypographyBody variant=\"body1\">\r\n                <Timer date unix={launch_date_unix} />\r\n              </TypographyBody>\r\n              <TypographyBody variant=\"body1\">\r\n                <Timer unix={launch_date_unix} />\r\n              </TypographyBody>\r\n              <TypographyBody variant=\"body1\">{site_name}</TypographyBody>\r\n              <TypographyBody variant=\"body1\">{landingSite()}</TypographyBody>\r\n              <TypographyBody>{rocketInfo(block)}</TypographyBody>\r\n              <TypographyBody>{rocketPayload()}</TypographyBody>\r\n            </RightContainer>\r\n          </MissionDetailsContainer>\r\n        </InfoBox>\r\n        <ImageBox>\r\n          <Img fluid={fluid} alt=\"Mission patch\" />\r\n        </ImageBox>\r\n      </StyledBoxContainer>\r\n      <TimerBox>\r\n        <CountdownComponent unix={launch_date_unix}></CountdownComponent>\r\n      </TimerBox>\r\n    </StyledPaperContainer>\r\n  )\r\n}\r\n\r\nexport default UpcomingLaunch\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport UpcomingLaunch from \"../components/upcomingLaunch\"\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Layout>\r\n      <UpcomingLaunch />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}